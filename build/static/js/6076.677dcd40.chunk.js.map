{"version":3,"file":"static/js/6076.677dcd40.chunk.js","mappings":"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","sources":["api/registrationAPI.js","pages/auth/SignUpOtpPage.jsx"],"sourcesContent":["import { API_CONFIG } from \"../utils/api-config\";\r\nimport axios from \"axios\";\r\n\r\nexport const registration = async (data) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${API_CONFIG.baseURL}/auth/register`,\r\n      data, // Send data in request body\r\n      { headers: API_CONFIG.headers } // Ensure headers are included\r\n    );\r\n    return response.data; // Axios automatically parses JSON\r\n  } catch (error) {\r\n    return error.response?.data;\r\n    // throw new Error(error.response?.data?.message || \"Registration failed\");\r\n  }\r\n};\r\n\r\nexport const verifyRegistrationOTP = async (data) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${API_CONFIG.baseURL}/auth/verify-registration-otp`,\r\n      data, // Send data in request body\r\n      { headers: API_CONFIG.headers } // Ensure headers are included\r\n    );\r\n    return response.data; // Axios automatically parses JSON\r\n  } catch (error) {\r\n    return error.response?.data;\r\n    // throw new Error(error.response?.data?.message || \"Registration failed\");\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport Preloader from '../../helper/Preloader'\r\nimport ScrollToTop from 'react-scroll-to-top'\r\nimport ColorInit from '../../helper/ColorInit'\r\nimport HeaderOne from '../../components/HeaderOne'\r\nimport FooterOne from '../../components/FooterOne'\r\nimport BottomFooter from '../../components/BottomFooter'\r\nimport Map from '../../components/Map'\r\nimport { FaFacebook, FaGoogle } from 'react-icons/fa'\r\nimport { useDispatch } from 'react-redux'\r\nimport { verifyRegistrationOTP } from '../../api/registrationAPI'\r\nimport { showToast } from '../../components/ToastifyNotification'\r\nimport { LOGIN_SUCCESS } from '../../reducers/authReducer'\r\nimport { syncCartWithDatabase } from '../../actions/cartActions'\r\n\r\nconst SignUpOtpPage = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [error, setError] = useState('');\r\n    const [otp, setOtp] = useState([\"\", \"\", \"\", \"\", \"\", \"\"]); // State for 4 inputs\r\n\r\n    const location = useLocation();\r\n\r\n    const emailOrPhone = location.state?.emailOrPhone || '';\r\n\r\n    useEffect(() => {\r\n        if(!emailOrPhone){\r\n            navigate('/sign-up')\r\n        }\r\n    }, [emailOrPhone])\r\n    \r\n\r\n    const handleInputChange = (value, index) => {\r\n        if (value.length > 1) return; // Ensure single character input\r\n\r\n        const newOtp = [...otp];\r\n        newOtp[index] = value;\r\n        setOtp(newOtp);\r\n\r\n        // Focus on the next input if value is entered and index < 3\r\n        if (value && index < 5) {\r\n            const nextInput = document.getElementById(`otp-${index + 1}`);\r\n            if (nextInput) nextInput.focus();\r\n        }\r\n    };\r\n\r\n    const handleKeyDown = (e, index) => {\r\n        if (e.key === \"Backspace\" && !otp[index] && index > 0) {\r\n            const prevInput = document.getElementById(`otp-${index - 1}`);\r\n            if (prevInput) prevInput.focus();\r\n        }\r\n    };\r\n\r\n    const handlePaste = (e) => {\r\n        e.preventDefault();\r\n        const pasteData = e.clipboardData.getData(\"text\").slice(0, 6); // Get up to 4 characters\r\n        const newOtp = [...otp];\r\n        for (let i = 0; i < pasteData.length; i++) {\r\n            if (i < 6) {\r\n                newOtp[i] = pasteData[i];\r\n            }\r\n        }\r\n        setOtp(newOtp);\r\n\r\n        // Optionally, move focus to the last filled input\r\n        const lastFilledIndex = pasteData.length - 1;\r\n        if (lastFilledIndex < 6) {\r\n            const nextInput = document.getElementById(`otp-${lastFilledIndex}`);\r\n            if (nextInput) nextInput.focus();\r\n        }\r\n    };\r\n\r\n    const verifyOtp = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const data = {\r\n                emailOrPhone: emailOrPhone,\r\n                otp: otp.join(\"\"),\r\n            }\r\n            if(!otp.join(\"\")){\r\n                showToast('error','Otp is required')\r\n                return;\r\n            }\r\n            const response = await verifyRegistrationOTP(data); // Make sure login function returns token\r\n\r\n            if (response.success == true) {\r\n                showToast('success', response.message)\r\n                // localStorage.setItem('token', response.data.token); // Store token in localStorage\r\n                // localStorage.setItem('user', JSON.stringify(response.data.customer));\r\n                dispatch({ type: LOGIN_SUCCESS, payload: { response } }); // Dispatch LOGIN_SUCCESS action\r\n\r\n                // Sync cart with database after login\r\n                dispatch(syncCartWithDatabase());\r\n\r\n                navigate('/dashboard', { state: {} }); // Redirect upon successful login\r\n                // navigate('/verify-otp'); // Redirect upon successful login\r\n            } else {\r\n                // setError(response.message);\r\n                showToast('error', response.message)\r\n            }\r\n\r\n        } catch (error) {\r\n            // setError(error); // Handle login errors\r\n            showToast('error', error)\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <>\r\n            {/* Preloader */}\r\n            <Preloader />\r\n\r\n            {/* ScrollToTop */}\r\n            <ScrollToTop smooth color=\"#299E60\" />\r\n\r\n            {/* ColorInit */}\r\n            <ColorInit color={false} />\r\n\r\n            {/* HeaderOne */}\r\n            <HeaderOne />\r\n            <section className=\"py-80 auth-bg \">\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        {/* <div className='col-md-7 p-0'>\r\n                        </div> */}\r\n                        <div className=\"col-md-5 m-auto\">\r\n                            <form onSubmit={verifyOtp}>\r\n                                <div className=\"border bg-white shadow border-gray-100 hover-border-main-600 transition-1 rounded-16 px-24 py-20 h-100 w-100\">\r\n                                    <h4 className=\"text-xxl mb-0\">Enter OTP here </h4>\r\n                                    <hr />\r\n                                    <label\r\n                                        htmlFor=\"otp\"\r\n                                        style={{\r\n                                            fontWeight: \"500\",\r\n                                            marginBottom: \"8px\",\r\n                                            color: \"#212529\",\r\n                                        }}\r\n                                    >\r\n                                        Enter OTP <span style={{ color: \"#dc3545\" }}>*</span>{\" \"}\r\n                                    </label>\r\n                                    <div style={{ display: \"flex\", gap: \"10px\", marginBottom: \"24px\" }}>\r\n                                        <div style={{ display: \"flex\", gap: \"5px\", marginTop: \"8px\" }}>\r\n                                            {otp.map((value, index) => (\r\n                                                <input\r\n                                                    key={index}\r\n                                                    type=\"text\"\r\n                                                    maxLength=\"1\"\r\n                                                    style={{\r\n                                                        width: \"40px\",\r\n                                                        height: \"40px\",\r\n                                                        textAlign: \"center\",\r\n                                                        fontSize: \"18px\",\r\n                                                        border: \"1px solid #ced4da\",\r\n                                                        borderRadius: \"5px\",\r\n                                                    }}\r\n                                                    value={value}\r\n                                                    onChange={(e) => handleInputChange(e.target.value, index)}\r\n                                                    onKeyDown={(e) => handleKeyDown(e, index)}\r\n                                                    onPaste={handlePaste}\r\n                                                    id={`otp-${index}`}\r\n                                                    required\r\n                                                />\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"mb-10 mt-20\">\r\n                                        <div className=\"flex-align gap-48 flex-wrap\">\r\n                                            {/* <a href=\"/verify-otp\" className=\"btn btn-main py-18 px-40\">\r\n                                            Verify\r\n                                        </a> */}\r\n                                            <button className=\"btn btn-main py-18 px-40\" type=\"submit\">Verify</button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {/* FooterOne */}\r\n            <FooterOne />\r\n\r\n            {/* BottomFooter */}\r\n            <BottomFooter />\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default SignUpOtpPage"],"names":["registration","async","axios","post","API_CONFIG","baseURL","data","headers","error","_error$response","response","verifyRegistrationOTP","_error$response2","SignUpOtpPage","_location$state","dispatch","useDispatch","navigate","useNavigate","setError","useState","otp","setOtp","emailOrPhone","useLocation","state","useEffect","handlePaste","e","preventDefault","pasteData","clipboardData","getData","slice","newOtp","i","length","lastFilledIndex","nextInput","document","getElementById","focus","_jsxs","_Fragment","children","_jsx","Preloader","ScrollToTop","smooth","color","ColorInit","HeaderOne","className","onSubmit","join","showToast","success","message","type","LOGIN_SUCCESS","payload","syncCartWithDatabase","htmlFor","style","fontWeight","marginBottom","display","gap","marginTop","map","value","index","maxLength","width","height","textAlign","fontSize","border","borderRadius","onChange","handleInputChange","target","onKeyDown","handleKeyDown","key","prevInput","onPaste","id","required","FooterOne","BottomFooter"],"sourceRoot":""}