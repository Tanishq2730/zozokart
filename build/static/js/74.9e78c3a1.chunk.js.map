{"version":3,"file":"static/js/74.9e78c3a1.chunk.js","mappings":"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","sources":["api/addressAPI.js","api/orderAPI.js","components/Checkout.jsx","api/paymentAPI.js","pages/CheckoutPage.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { API_CONFIG } from \"../utils/api-config\";\r\nimport fetchWithAuth from \"../utils/apiAthurization\";\r\n\r\n// 🛒 1️⃣ Fetch User Cart from Database\r\nexport const getUserAddresses = async () => {\r\n  try {\r\n    const response = await fetchWithAuth(\r\n        `${API_CONFIG.baseURL}/web/user-address`,'GET'\r\n      );\r\n    return response.data;\r\n  } catch (error) {\r\n    return error.response?.data;\r\n    // console.error(\"❌ Error fetching user cart:\", error);\r\n    // return [];\r\n  }\r\n};\r\n\r\n// 🛒 3️⃣ Add Item to Cart in Database\r\nexport const addUserAddress = async data => {\r\n  console.log(data);\r\n  try {\r\n    const response = await fetchWithAuth(\r\n        `${API_CONFIG.baseURL}/web/user-address`,'POST',data\r\n      );\r\n    return response.data;\r\n  } catch (error) {\r\n    return error.response?.data;\r\n    // console.error(\"❌ Error adding item to cart:\", error);\r\n  }\r\n};\r\n\r\n// 🛒 4️⃣ Update Cart Quantity in Database\r\nexport const updateUserAddress = async (id,data) => {\r\n  try {\r\n    const response = await fetchWithAuth(\r\n        `${API_CONFIG.baseURL}/web/user-address/${id}`,'PATCH',data\r\n      );\r\n    return response.data;\r\n  } catch (error) {\r\n    return error.response?.data;\r\n    // console.error(\"❌ Error updating cart:\", error);\r\n  }\r\n};\r\n\r\n// 🛒 5️⃣ Remove Item from Database Cart\r\nexport const deleteUserAddress = async id => {\r\n  try {\r\n    const response = await fetchWithAuth(\r\n        `${API_CONFIG.baseURL}/web/user-address/${id}`,'DELETE'\r\n      );\r\n    return response.data;\r\n  } catch (error) {\r\n    return error.response?.data;\r\n    // console.error(\"❌ Error removing item from cart:\", error);\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { API_CONFIG, API_CONFIG_AUTH } from \"../utils/api-config\";\r\nimport fetchWithAuth from \"../utils/apiAthurization\";\r\n\r\n// 🛒 1️⃣ Fetch User Cart from Database\r\nexport const placeOrder = async (data) => {\r\n  try {\r\n    const response = await fetchWithAuth(\r\n      `${API_CONFIG.baseURL}/web/place-order`,'POST',data\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    return error.response?.data;\r\n    // console.error(\"❌ Error fetching user cart:\", error);\r\n    // return [];\r\n  }\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { placeOrder } from \"../api/orderAPI\";\r\nimport { getUserAddresses, addUserAddress, updateUserAddress, deleteUserAddress } from \"../api/addressAPI\";\r\nimport { showToast } from \"./ToastifyNotification\";\r\n// import { ShoppingCart } from \"@phosphor-icons/react\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Row,\r\n    Col,\r\n} from \"reactstrap\";\r\nimport { createRazorpayOrder } from \"../api/paymentAPI\";\r\nimport { CLEAR_CART } from \"../actions/cartActions\";\r\n\r\nconst Checkout = () => {\r\n    const [selectedPayment, setSelectedPayment] = useState(\"paynow\");\r\n    const [addresses, setAddresses] = useState([]);\r\n    const [selectedAddressId, setSelectedAddressId] = useState(null);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [modalMode, setModalMode] = useState(null); // 'add' or 'edit'\r\n    const [currentAddressToEdit, setCurrentAddressToEdit] = useState(null);\r\n    const [modalFormData, setModalFormData] = useState({\r\n        fullName: \"\",\r\n        phoneNumber: \"\",\r\n        alternatePhoneNumber: \"\",\r\n        pinCode: \"\",\r\n        state: \"\",\r\n        city: \"\",\r\n        houseNumber: \"\",\r\n        area: \"\",\r\n        nearByFamous: \"\",\r\n        default: false,\r\n        addressType: \"Home\",\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const cart = useSelector(state => state?.cart.cart);\r\n    const isAuthenticated = useSelector(state => state.auth?.isAuthenticated);\r\n    const user = useSelector(state => state.auth?.user);\r\n    const [razorpayLoaded, setRazorpayLoaded] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!isAuthenticated) {\r\n            navigate('/sign-in');\r\n        }\r\n    }, [isAuthenticated, navigate]);\r\n\r\n    useEffect(() => {\r\n        const fetchAddresses = async () => {\r\n            if (isAuthenticated && user?._id) {\r\n                try {\r\n                    const response = await getUserAddresses();\r\n                    if (response?.success) {\r\n                        setAddresses(response.data);\r\n                        const defaultAddress = response.data.find(addr => addr.defaultAddress);\r\n                        if (defaultAddress) {\r\n                            setSelectedAddressId(defaultAddress._id);\r\n                        } else if (response.data.length > 0) {\r\n                            setSelectedAddressId(response.data[0]._id);\r\n                        }\r\n                    } else {\r\n                        showToast(\"error\", response?.message || \"Failed to fetch addresses.\");\r\n                    }\r\n                } catch (error) {\r\n                    showToast(\"error\", \"Error fetching addresses.\");\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchAddresses();\r\n    }, [isAuthenticated, user?._id]);\r\n\r\n    if (!cart?.items) {\r\n        return <p className=\"text-center py-40\">Your cart is empty.</p>;\r\n    }\r\n\r\n    const handlePaymentChange = event => {\r\n        setSelectedPayment(event.target.id);\r\n    };\r\n\r\n    const handleAddressSelect = (addressId) => {\r\n        setSelectedAddressId(addressId);\r\n    };\r\n\r\n    const openAddAddressModal = () => {\r\n        setModalMode('add');\r\n        setModalFormData({ // Initialize form for adding\r\n            fullName: \"\",\r\n            phoneNumber: \"\",\r\n            alternatePhoneNumber: \"\",\r\n            pinCode: \"\",\r\n            state: \"\",\r\n            city: \"\",\r\n            houseNumber: \"\",\r\n            area: \"\",\r\n            nearByFamous: \"\",\r\n            defaultAddress: false,\r\n            addressType: \"Home\",\r\n        });\r\n        setCurrentAddressToEdit(null);\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const openEditAddressModal = (address) => {\r\n        setModalMode('edit');\r\n        setModalFormData({ ...address });\r\n        setCurrentAddressToEdit(address);\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n        setModalMode(null);\r\n        setCurrentAddressToEdit(null);\r\n        setModalFormData({ // Reset form data on close\r\n            fullName: \"\",\r\n            phoneNumber: \"\",\r\n            alternatePhoneNumber: \"\",\r\n            pinCode: \"\",\r\n            state: \"\",\r\n            city: \"\",\r\n            houseNumber: \"\",\r\n            area: \"\",\r\n            nearByFamous: \"\",\r\n            defaultAddress: false,\r\n            addressType: \"Home\",\r\n        });\r\n    };\r\n\r\n    const handleModalInputChange = (event) => {\r\n        const { name, value, type, checked } = event.target;\r\n        setModalFormData(prevState => ({\r\n            ...prevState,\r\n            [name]: type === 'checkbox' ? checked : value,\r\n        }));\r\n    };\r\n\r\n    const handleSaveAddressModal = async () => {\r\n        if (!user?._id) {\r\n            showToast(\"error\", \"User not authenticated.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            let response;\r\n            if (modalMode === 'add') {\r\n                response = await addUserAddress(modalFormData);\r\n                if (response.success) {\r\n                    showToast(\"success\", \"New address added successfully.\");\r\n                    setAddresses([...addresses, response.data]);\r\n                    if (response.data.defaultAddress) {\r\n                        setSelectedAddressId(response.data._id);\r\n                        setAddresses(prevAddresses =>\r\n                            prevAddresses.map(addr =>\r\n                                addr._id === response.data._id ? { ...addr, defaultAddress: true } : { ...addr, default: false }\r\n                            )\r\n                        );\r\n                    } else if (!selectedAddressId && addresses.length === 0) {\r\n                        setSelectedAddressId(response.data._id);\r\n                    }\r\n                    closeModal();\r\n                } else {\r\n                    showToast(\"error\", response?.message || \"Failed to add new address.\");\r\n                }\r\n            } else if (modalMode === 'edit' && currentAddressToEdit?._id) {\r\n                response = await updateUserAddress(currentAddressToEdit._id, modalFormData);\r\n                if (response.success) {\r\n                    showToast(\"success\", \"Address updated successfully.\");\r\n                    setAddresses(prevAddresses =>\r\n                        prevAddresses.map(addr =>\r\n                            addr._id === currentAddressToEdit._id ? response.data : addr\r\n                        )\r\n                    );\r\n                    if (response.data.defaultAddress) {\r\n                        setSelectedAddressId(response.data._id);\r\n                        setAddresses(prevAddresses =>\r\n                            prevAddresses.map(addr =>\r\n                                addr._id === response.data._id ? { ...addr, defaultAddress: true } : { ...addr, defaultAddress: false }\r\n                            )\r\n                        );\r\n                    }\r\n                    closeModal();\r\n                } else {\r\n                    showToast(\"error\", response?.message || \"Failed to update address.\");\r\n                }\r\n            }\r\n        } catch (error) {\r\n            showToast(\"error\", `Error ${modalMode === 'add' ? 'adding' : 'updating'} address.`);\r\n        }\r\n    };\r\n\r\n    const handleDeleteAddress = async (addressId) => {\r\n        if (!user?._id || !addressId) {\r\n            showToast(\"error\", \"Invalid request to delete address.\");\r\n            return;\r\n        }\r\n        if (window.confirm(\"Are you sure you want to delete this address?\")) {\r\n            try {\r\n                const response = await deleteUserAddress(addressId);\r\n                if (response?.success) {\r\n                    showToast(\"success\", \"Address deleted successfully.\");\r\n                    setAddresses(prevAddresses => prevAddresses.filter(addr => addr._id !== addressId));\r\n                    if (selectedAddressId === addressId) {\r\n                        setSelectedAddressId(addresses.length > 1 ? addresses[0]._id : null);\r\n                    }\r\n                } else {\r\n                    showToast(\"error\", response?.message || \"Failed to delete address.\");\r\n                }\r\n            } catch (error) {\r\n                showToast(\"error\", \"Error deleting address.\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const handlePlaceOrderNow = async () => {\r\n        if (!selectedAddressId) {\r\n            showToast(\"error\", \"Please select a delivery address.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await placeOrder({ \r\n                                addressId: selectedAddressId,\r\n                                paymentId: \"\",\r\n                                orderId: \"\",\r\n                                paymentSignature: \"\",\r\n                                paymentMethod: 'COD' \r\n                            });\r\n            console.log(response);\r\n\r\n            if (response?.success) {\r\n                showToast(\"success\", response.message);\r\n                dispatch({type: CLEAR_CART});\r\n                navigate(\"/order-success\"); // Redirect upon successful order\r\n            } else {\r\n                showToast(\"error\", response.message || \"Failed to place order.\");\r\n            }\r\n        } catch (error) {\r\n            showToast(\"error\", \"Error placing order.\");\r\n        }\r\n    };\r\n\r\n    const loadRazorpayScript = () => {\r\n        return new Promise((resolve) => {\r\n            if (document.querySelector('script[src=\"https://checkout.razorpay.com/v1/checkout.js\"]')) {\r\n            resolve(true); // Already loaded\r\n            return;\r\n            }\r\n\r\n            const script = document.createElement(\"script\");\r\n            script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\r\n            script.onload = () => resolve(true);\r\n            script.onerror = () => resolve(false);\r\n            document.body.appendChild(script);\r\n        });\r\n    };\r\n    const handleInitiatePayment = async () => {\r\n        if (selectedPayment === 'paynow') {\r\n            if (!selectedAddressId) {\r\n                showToast(\"warning\", \"Please select a delivery address.\");\r\n                return;\r\n            }\r\n\r\n            const razorpayLoaded = await loadRazorpayScript();\r\n            if (!razorpayLoaded) {\r\n                showToast(\"error\", \"Failed to load Razorpay SDK.\");\r\n                return;\r\n            }\r\n            dispatch({ type: 'loader', loader: true })\r\n            try {\r\n                const orderResponse = await createRazorpayOrder({ amount: cart.total * 100 });\r\n\r\n                if (!orderResponse.success) {\r\n                    const errorData = orderResponse.message;\r\n                    showToast(\"error\", errorData || \"Failed to create payment order.\");\r\n                    return;\r\n                }else{\r\n                    dispatch({ type: 'loader', loader: false })\r\n                }\r\n\r\n                const orderData = orderResponse.data;\r\n\r\n                const options = {\r\n                    key: \"rzp_test_sbbCHuQzenmT45\", // Replace with your Razorpay Key ID\r\n                    amount: orderData.amount,\r\n                    currency: \"INR\",\r\n                    order_id: orderData.id,\r\n                    name: \"ZozoKart\",\r\n                    description: \"Payment for your order\",\r\n                    image: \"/assets/images/logo/logo.png\", // Replace with your logo URL\r\n                    handler: async (response) => {\r\n                        if (response?.razorpay_payment_id) {\r\n                            // Payment successful, now place the order\r\n                            dispatch({ type: 'loader', loader: true })\r\n\r\n                            const placeOrderResponse = await placeOrder({\r\n                                addressId: selectedAddressId,\r\n                                paymentId: response.razorpay_payment_id,\r\n                                orderId: orderData.id,\r\n                                paymentSignature: response.razorpay_signature,\r\n                                paymentMethod: 'Razorpay'\r\n                            });\r\n\r\n                            if (placeOrderResponse?.success) {\r\n                                showToast(\"success\", placeOrderResponse.message);\r\n                                dispatch({type: CLEAR_CART});\r\n                                navigate(\"/order-success\"); // Redirect to order confirmation or dashboard\r\n                            } else {\r\n                                showToast(\"error\", placeOrderResponse?.message || \"Failed to place order after successful payment.\");\r\n                            }\r\n                            dispatch({ type: 'loader', loader: false })\r\n                        } else {\r\n                            showToast(\"error\", \"Payment failed or was cancelled.\");\r\n                            dispatch({ type: 'loader', loader: false })\r\n                        }\r\n                    },\r\n                    prefill: {\r\n                        name: user?.name || \"\",\r\n                        email: user?.email || \"\",\r\n                        contact: addresses.find(addr => addr._id === selectedAddressId)?.phoneNumber || \"\",\r\n                    },\r\n                    theme: {\r\n                        color: \"#3399cc\"\r\n                    }\r\n                };\r\n\r\n                const rzp1 = new window.Razorpay(options);\r\n                rzp1.open();\r\n            } catch (error) {\r\n                console.error(\"Error initiating payment:\", error);\r\n                showToast(\"error\", \"Failed to initiate payment.\");\r\n            }finally{\r\n                dispatch({ type: 'loader', loader: false })\r\n            }\r\n        } else {\r\n            handlePlaceOrderNow(); // For other payment methods\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <section className=\"checkout py-20\">\r\n            <div className=\"container\">\r\n\r\n\r\n                {/* Reactstrap Modal */}\r\n                <Modal size=\"lg\" isOpen={isModalOpen} toggle={closeModal} className=\"address-modal\">\r\n                    <ModalHeader toggle={closeModal}>{modalMode === 'add' ? 'Add New Delivery Address' : 'Edit Delivery Address'}</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <Row className=\"gy-3\">\r\n                                <Col sm={6}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"fullName\">Full Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            className=\"common-input border-gray-100\"\r\n                                            placeholder=\"Full Name\"\r\n                                            name=\"fullName\"\r\n                                            value={modalFormData.fullName}\r\n                                            onChange={handleModalInputChange}\r\n                                            required\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col sm={6}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"phoneNumber\">Phone Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            className=\"common-input border-gray-100\"\r\n                                            placeholder=\"Phone Number\"\r\n                                            name=\"phoneNumber\"\r\n                                            value={modalFormData.phoneNumber}\r\n                                            onChange={handleModalInputChange}\r\n                                            required\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col xs={12}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"alternatePhoneNumber\">Alternate Phone Number (Optional)</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            className=\"common-input border-gray-100\"\r\n                                            placeholder=\"Alternate Phone Number (Optional)\"\r\n                                            name=\"alternatePhoneNumber\"\r\n                                            value={modalFormData.alternatePhoneNumber}\r\n                                            onChange={handleModalInputChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={6} xs={12}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"pinCode\">Pin Code</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            className=\"common-input border-gray-100\"\r\n                                            placeholder=\"Pin Code\"\r\n                                            name=\"pinCode\"\r\n                                            value={modalFormData.pinCode}\r\n                                            onChange={handleModalInputChange}\r\n                                            required\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={6} xs={12}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"state\">State</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            className=\"common-input border-gray-100\"\r\n                                            placeholder=\"State\"\r\n                                            name=\"state\"\r\n                                            value={modalFormData.state}\r\n                                            onChange={handleModalInputChange}\r\n                                            required\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={6} xs={12}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"city\">City</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            className=\"common-input border-gray-100\"\r\n                                            placeholder=\"City\"\r\n                                            name=\"city\"\r\n                                            value={modalFormData.city}\r\n                                            onChange={handleModalInputChange}\r\n                                            required\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={6} xs={12}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"houseNumber\">House Number (Optional)</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            className=\"common-input border-gray-100\"\r\n                                            placeholder=\"House Number (Optional)\"\r\n                                            name=\"houseNumber\"\r\n                                            value={modalFormData.houseNumber}\r\n                                            onChange={handleModalInputChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col xs={12}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"area\">Area (Optional)</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            className=\"common-input border-gray-100\"\r\n                                            placeholder=\"Area (Optional)\"\r\n                                            name=\"area\"\r\n                                            value={modalFormData.area}\r\n                                            onChange={handleModalInputChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col xs={12}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"nearByFamous\">Nearby Famous Place (Optional)</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            className=\"common-input border-gray-100\"\r\n                                            placeholder=\"Nearby Famous Place (Optional)\"\r\n                                            name=\"nearByFamous\"\r\n                                            value={modalFormData.nearByFamous}\r\n                                            onChange={handleModalInputChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col xs={12}>\r\n                                    <FormGroup className=\"form-check common-check\">\r\n                                        <Input\r\n                                            type=\"checkbox\"\r\n                                            className=\"form-check-input\"\r\n                                            id=\"isDefaultModal\"\r\n                                            name=\"defaultAddress\"\r\n                                            checked={modalFormData.defaultAddress}\r\n                                            onChange={handleModalInputChange}\r\n                                        />\r\n                                        <Label className=\"form-check-label fw-normal text-neutral-600\" htmlFor=\"isDefaultModal\">Set as default address</Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col xs={12}>\r\n                                    <FormGroup className=\"form-check common-check\">\r\n                                        <Input\r\n                                            type=\"radio\"\r\n                                            className=\"form-check-input\"\r\n                                            id=\"addressTypeHomeModal\"\r\n                                            name=\"addressType\"\r\n                                            value=\"Home\"\r\n                                            checked={modalFormData.addressType === \"Home\"}\r\n                                            onChange={handleModalInputChange}\r\n                                        />\r\n                                        <Label className=\"form-check-label fw-normal text-neutral-600 me-3\" htmlFor=\"addressTypeHomeModal\">Home</Label>\r\n                                        <Input\r\n                                            type=\"radio\"\r\n                                            className=\"form-check-input\"\r\n                                            id=\"addressTypeWorkModal\"\r\n                                            name=\"addressType\"\r\n                                            value=\"Work\"\r\n                                            checked={modalFormData.addressType === \"Work\"}\r\n                                            onChange={handleModalInputChange}\r\n                                        />\r\n                                        <Label className=\"form-check-label fw-normal text-neutral-600\" htmlFor=\"addressTypeWorkModal\">Work</Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col xs={12} className=\"mt-3\">\r\n                                    <Button color=\"primary\" className=\"rounded-pill me-2\" onClick={handleSaveAddressModal}>{modalMode === 'add' ? 'Add Address' : 'Save Changes'}</Button>\r\n                                    <Button color=\"secondary\" className=\"rounded-pill\" onClick={closeModal}>Cancel</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-7 col-lg-7\">\r\n                        <div className=\"mb-40\">\r\n                            <h6 className=\"text-lg mb-24\">Select Delivery Address</h6>\r\n                            {addresses.length > 0 ? (\r\n                                addresses.map(address => (\r\n                                    <div key={address._id} className={`border border-gray-200 rounded-8 p-24 mb-16 ${selectedAddressId === address._id ? 'border-main-600' : ''}`}>\r\n                                        <div className=\"d-flex justify-content-between align-items-center mb-12\">\r\n                                            <div className=\"form-check common-check common-radio\">\r\n                                                <Input\r\n                                                    className=\"form-check-input\"\r\n                                                    type=\"radio\"\r\n                                                    name=\"deliveryAddress\"\r\n                                                    id={`address-${address._id}`}\r\n                                                    value={address._id}\r\n                                                    checked={selectedAddressId === address._id}\r\n                                                    onChange={() => handleAddressSelect(address._id)}\r\n                                                />\r\n                                                <Label className=\"form-check-label fw-semibold text-gray-900\" htmlFor={`address-${address._id}`}>\r\n                                                    {address.fullName} ({address.addressType}) {address.defaultAddress && <span className=\"text-sm text-main-600\">(Default)</span>}\r\n                                                </Label>\r\n                                            </div>\r\n                                            <div>\r\n                                                <Button color=\"primary\" size=\"sm\" className=\"me-1\" onClick={() => openEditAddressModal(address)}>Edit</Button>\r\n                                                <Button color=\"danger\" size=\"sm\" className=\"text-danger\" onClick={() => handleDeleteAddress(address._id)}>Delete</Button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <p className=\"text-gray-700 mb-8\">\r\n                                            {address.houseNumber && `${address.houseNumber}, `}{address.area}, {address.nearByFamous && `Near ${address.nearByFamous}, `}{address.city}, {address.state} - {address.pinCode}\r\n                                        </p>\r\n                                        <p className=\"text-gray-700\">Phone: {address.phoneNumber}{address.alternatePhoneNumber && `, Alt: ${address.alternatePhoneNumber}`}</p>\r\n                                    </div>\r\n                                ))\r\n                            ) : (\r\n                                <p className=\"text-gray-500\">No delivery addresses found. Please add a new one.</p>\r\n                            )}\r\n                            <Button color=\"secondary\" className=\"rounded-pill mt-16\" onClick={openAddAddressModal}>Add New Address</Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-5 col-lg-5\">\r\n                        <div className=\"checkout-sidebar\">\r\n                            <div className=\"bg-color-three rounded-8 p-24 text-center\">\r\n                                <span className=\"text-gray-900 text-xl fw-semibold\">\r\n                                    Your Orders\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"border border-gray-100 rounded-8 px-24 py-40 mt-24\">\r\n                                <div className=\"d-flex justify-content-between align-items-center mb-32 pb-32 border-bottom border-gray-100 gap-8\">\r\n                                    <span className=\"text-gray-900 fw-medium text-xl font-heading-two\">\r\n                                        Product\r\n                                    </span>\r\n                                    <span className=\"text-gray-900 fw-medium text-xl font-heading-two\">\r\n                                        Subtotal\r\n                                    </span>\r\n                                </div>\r\n                                {cart.items.length > 0 ? (\r\n                                    cart.items?.map(item => (\r\n                                        <div key={item.productId._id + item.variationId._id} className=\"d-flex justify-content-between gap-24 mb-32\">\r\n                                            <div className=\"d-flex align-items-center gap-12\">\r\n                                                <span className=\"text-gray-900 fw-normal text-md font-heading-two w-144\">\r\n                                                    {item.productId.name}\r\n                                                </span>\r\n                                                <span className=\"text-gray-900 fw-normal text-md font-heading-two\">\r\n                                                    <i className=\"ph-bold ph-x\" />\r\n                                                </span>\r\n                                                <span className=\"text-gray-900 fw-semibold text-md font-heading-two\">\r\n                                                    {item.quantity}\r\n                                                </span>\r\n                                            </div>\r\n                                            <span className=\"text-gray-900 fw-bold text-md font-heading-two\">\r\n                                                ₹{item.quantity * item.variationId.salePrice}\r\n                                            </span>\r\n                                        </div>\r\n                                    ))\r\n                                ) : (\r\n                                    <div\r\n                                        className=\"empty-cart p-10 text-center\"\r\n                                        style={{ flex: 1 }}\r\n                                    >\r\n                                        {/* <ShoppingCart size={60} color=\"#ccc\" /> */}\r\n                                        <p className=\"text-black\">No products in the cart.</p>\r\n                                        <Link\r\n                                            to=\"/shop\"\r\n                                            className=\"btn btn-main d-inline-flex align-items-center rounded-pill gap-8 mt-24\"\r\n                                        >\r\n                                            Return To Shop\r\n                                        </Link>\r\n                                    </div>\r\n                                )}\r\n                                <div className=\"d-flex justify-content-between gap-24 py-20  border-top\">\r\n                                    <div className=\"d-flex align-items-center gap-12\">\r\n                                        <span className=\"text-gray-900 fw-normal text-md font-heading-two w-144\">\r\n                                            Subtotal\r\n                                        </span>\r\n                                    </div>\r\n                                    <span className=\"text-gray-900 fw-bold text-md font-heading-two\">\r\n                                        ₹{cart.subTotal}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-between gap-24 py-20 border-top\">\r\n                                    <div className=\"d-flex align-items-center gap-12\">\r\n                                        <span className=\"text-gray-900 fw-normal text-md font-heading-two w-144\">\r\n                                            Shipping\r\n                                        </span>\r\n                                    </div>\r\n                                    <span className=\"text-gray-900 fw-bold text-md font-heading-two\">\r\n                                        Free\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-between gap-24 py-20  border-top\">\r\n                                    <div className=\"d-flex align-items-center gap-12\">\r\n                                        <span className=\"text-gray-900 fw-normal text-md font-heading-two w-144\">\r\n                                            Discount\r\n                                        </span>\r\n                                    </div>\r\n                                    <span className=\"text-gray-900 fw-bold text-md font-heading-two\">\r\n                                        ₹{cart.discount}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-between gap-24 py-20  border-top\">\r\n                                    <div className=\"d-flex align-items-center gap-12\">\r\n                                        <span className=\"text-gray-900 fw-normal text-md font-heading-two w-144\">\r\n                                            Total\r\n                                        </span>\r\n                                    </div>\r\n                                    <span className=\"text-gray-900 fw-bold text-md font-heading-two\">\r\n                                        ₹{cart.total}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mt-32\">\r\n                                <div className=\"payment-item\">\r\n                                    <div className=\"form-check common-check common-radio py-16 mb-0\">\r\n                                        <Input\r\n                                            className=\"form-check-input\"\r\n                                            type=\"radio\"\r\n                                            name=\"payment\"\r\n                                            id=\"paynow\"\r\n                                            checked={selectedPayment === \"paynow\"}\r\n                                            onChange={handlePaymentChange}\r\n                                        />\r\n                                        <Label\r\n                                            className=\"form-check-label fw-semibold text-neutral-600\"\r\n                                            htmlFor=\"paynow\"\r\n                                        >\r\n                                            Pay Now\r\n                                        </Label>\r\n                                    </div>\r\n                                    {selectedPayment === \"paynow\" && (\r\n                                        <div className=\"payment-item__content px-16 py-24 rounded-8 bg-main-50 position-relative d-block\">\r\n                                            <p className=\"text-gray-800\">\r\n                                                Make your payment directly into our bank account. Please\r\n                                                use your Order ID as the payment reference. Your order\r\n                                                will not be shipped until the funds have cleared in our\r\n                                                account.\r\n                                            </p>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"payment-item\">\r\n                                    <div className=\"form-check common-check common-radio py-16 mb-0\">\r\n                                        <Input\r\n                                            className=\"form-check-input\"\r\n                                            type=\"radio\"\r\n                                            name=\"payment\"\r\n                                            id=\"cod\"\r\n                                            checked={selectedPayment === \"cod\"}\r\n                                            onChange={handlePaymentChange}\r\n                                        />\r\n                                        <Label\r\n                                            className=\"form-check-label fw-semibold text-neutral-600\"\r\n                                            htmlFor=\"cod\"\r\n                                        >\r\n                                            Cash on delivery\r\n                                        </Label>\r\n                                    </div>\r\n                                    {selectedPayment === \"cod\" && (\r\n                                        <div className=\"payment-item__content px-16 py-24 rounded-8 bg-main-50 position-relative d-block\">\r\n                                            <p className=\"text-gray-800\">\r\n                                                Pay with cash upon delivery.\r\n                                            </p>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mt-32 pt-32 border-top border-gray-100\">\r\n                                <p className=\"text-gray-500\">\r\n                                    Your personal data will be used to process your order, support\r\n                                    your experience throughout this website, and for other\r\n                                    purposes described in our{\" \"}\r\n                                    <Link\r\n                                        to=\"#\"\r\n                                        className=\"text-main-600 text-decoration-underline\"\r\n                                    >\r\n                                        {\" \"}privacy policy\r\n                                    </Link>{\" \"}\r\n                                    .\r\n                                </p>\r\n                            </div>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                className=\"mt-40 py-18 w-100 rounded-8 mt-56\"\r\n                                onClick={handleInitiatePayment}\r\n                                disabled={!selectedAddressId}\r\n                            >\r\n                                Place Order\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Checkout;","import axios from \"axios\";\r\nimport { API_CONFIG, API_CONFIG_AUTH } from \"../utils/api-config\";\r\nimport fetchWithAuth from \"../utils/apiAthurization\";\r\n\r\n// 🛒 1️⃣ Fetch User Cart from Database\r\nexport const createRazorpayOrder = async (data) => {\r\n  try {\r\n    const response = await fetchWithAuth(\r\n            `${API_CONFIG.baseURL}/web/create-razorpay-order`,'POST',data\r\n          );\r\n    return response.data;\r\n  } catch (error) {\r\n    return error.response?.data;\r\n    // console.error(\"❌ Error fetching user cart:\", error);\r\n    // return [];\r\n  }\r\n};","import React from \"react\";\r\nimport Preloader from \"../helper/Preloader\";\r\nimport ColorInit from \"../helper/ColorInit\";\r\nimport HeaderTwo from \"../components/HeaderTwo\";\r\nimport Breadcrumb from \"../components/Breadcrumb\";\r\nimport FooterTwo from \"../components/FooterTwo\";\r\nimport BottomFooter from \"../components/BottomFooter\";\r\nimport ShippingOne from \"../components/ShippingOne\";\r\nimport Checkout from \"../components/Checkout\";\r\nimport ScrollToTop from \"react-scroll-to-top\";\r\nimport HeaderOne from \"../components/HeaderOne\";\r\nimport FooterOne from \"../components/FooterOne\";\r\n\r\n\r\nconst CheckoutPage = () => {\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* ColorInit */}\r\n      <ColorInit color={true} />\r\n\r\n      {/* ScrollToTop */}\r\n      <ScrollToTop smooth color=\"#FA6400\" />\r\n\r\n      {/* Preloader */}\r\n      <Preloader />\r\n\r\n      {/* HeaderTwo */}\r\n      <HeaderOne />\r\n\r\n      {/* Breadcrumb */}\r\n      <Breadcrumb title={\"Checkout\"} />\r\n\r\n      {/* Checkout */}\r\n      <Checkout />\r\n\r\n      {/* ShippingOne */}\r\n      <ShippingOne />\r\n\r\n      {/* FooterTwo */}\r\n      <FooterOne />\r\n\r\n      {/* BottomFooter */}\r\n      <BottomFooter />\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;\r\n"],"names":["getUserAddresses","async","fetchWithAuth","API_CONFIG","baseURL","data","error","_error$response","response","addUserAddress","console","log","_error$response2","updateUserAddress","id","_error$response3","deleteUserAddress","_error$response4","placeOrder","Checkout","_cart$items","selectedPayment","setSelectedPayment","useState","addresses","setAddresses","selectedAddressId","setSelectedAddressId","isModalOpen","setIsModalOpen","modalMode","setModalMode","currentAddressToEdit","setCurrentAddressToEdit","modalFormData","setModalFormData","fullName","phoneNumber","alternatePhoneNumber","pinCode","state","city","houseNumber","area","nearByFamous","default","addressType","dispatch","useDispatch","navigate","useNavigate","cart","useSelector","isAuthenticated","_state$auth","auth","user","_state$auth2","razorpayLoaded","setRazorpayLoaded","useEffect","_id","success","defaultAddress","find","addr","length","showToast","message","fetchAddresses","items","_jsx","className","children","handlePaymentChange","event","target","closeModal","handleModalInputChange","name","value","type","checked","prevState","_jsxs","Modal","size","isOpen","toggle","ModalHeader","ModalBody","Form","Row","Col","sm","FormGroup","Label","for","Input","placeholder","onChange","required","xs","md","htmlFor","Button","color","onClick","_response","prevAddresses","map","_response2","address","handleAddressSelect","addressId","openEditAddressModal","window","confirm","filter","handleDeleteAddress","openAddAddressModal","item","productId","quantity","variationId","salePrice","style","flex","Link","to","subTotal","discount","total","Promise","resolve","document","querySelector","script","createElement","src","onload","onerror","body","appendChild","loader","_addresses$find","orderResponse","createRazorpayOrder","amount","errorData","orderData","options","key","currency","order_id","description","image","handler","razorpay_payment_id","placeOrderResponse","paymentId","orderId","paymentSignature","razorpay_signature","paymentMethod","CLEAR_CART","prefill","email","contact","theme","Razorpay","open","handlePlaceOrderNow","disabled","CheckoutPage","_Fragment","ColorInit","ScrollToTop","smooth","Preloader","HeaderOne","Breadcrumb","title","ShippingOne","FooterOne","BottomFooter"],"sourceRoot":""}