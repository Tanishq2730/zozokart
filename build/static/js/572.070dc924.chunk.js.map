{"version":3,"file":"static/js/572.070dc924.chunk.js","mappings":"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","sources":["components/productPageSection.jsx","pages/ProductPage.jsx"],"sourcesContent":["import React, { use, useEffect, useState } from \"react\";\r\nimport Card from \"./common/card\";\r\nimport { fetchFilters, fetchProducts } from \"../api/productAPI\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ProductPageSection = () => {\r\n  const [selectedFilters, setSelectedFilters] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n  const [filtersData, setFiltersData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filtersLoading, setFiltersLoading] = useState(true);\r\n  const location = useLocation();\r\n  const { categoryId, searchKey } = location.state || {};\r\n\r\n  const getProducts = async (filters) => {\r\n    setLoading(true);\r\n    try {\r\n      const transformedFilters = Object.entries(filters)\r\n        .filter(([_, value]) => value && value.length > 0)\r\n        .reduce((acc, [key, values]) => {\r\n          let formattedKey = key;\r\n\r\n          if (key === \"PRICE_RANGE\" || key === \"DISCOUNT\") {\r\n            acc[formattedKey] = values[0]; // Assuming [min, max]\r\n          } else {\r\n            acc[formattedKey] = values;\r\n          }\r\n\r\n          return acc;\r\n        }, {});\r\n\r\n      const data = await fetchProducts(transformedFilters);\r\n      if (data.success) {\r\n        setProducts(data.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching products:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getFiltersFromBackend = async () => {\r\n    try {\r\n      const data = await fetchFilters();\r\n      if (data.success) {\r\n        setFiltersData(data.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching filters:\", error);\r\n    } finally {\r\n      setFiltersLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFiltersFromBackend();\r\n  }, []);\r\n  useEffect(() => {\r\n    getProducts(selectedFilters);\r\n  }, [selectedFilters]);\r\n  useEffect(() => {\r\n    if (categoryId) {\r\n      setSelectedFilters({ CATEGORIES: [categoryId], searchKey: searchKey });\r\n    } else {\r\n      setSelectedFilters({ searchKey: searchKey });\r\n    }\r\n  }, [categoryId, searchKey]);\r\n\r\n  const toggleFilter = (filterType, optionValue) => {\r\n    // Receive optionValue\r\n    setSelectedFilters((prev) => {\r\n      const currentValues = prev[filterType] || [];\r\n      let newValues;\r\n\r\n      if (filterType === \"PRICE_RANGE\" || filterType === \"DISCOUNT\") {\r\n        newValues = currentValues.includes(optionValue) ? [] : [optionValue];\r\n      } else {\r\n        newValues = currentValues.includes(optionValue)\r\n          ? currentValues.filter((v) => v !== optionValue)\r\n          : [...currentValues, optionValue];\r\n      }\r\n\r\n      return {\r\n        ...prev,\r\n        [filterType]: newValues,\r\n      };\r\n    });\r\n  };\r\n\r\n  const filteredProducts = products;\r\n\r\n  // if (loading || filtersLoading) {\r\n  //   return <div>Loading products and filters...</div>;\r\n  // }\r\n\r\n  return (\r\n    <div className=\"container-fluid mt-4\">\r\n      <div className=\"row\">\r\n        {/* Filter Section */}\r\n        <div className=\"col-md-3 border-end\">\r\n          <div className=\"mainfiltercard\">\r\n            <div className=\"filtercard\">\r\n              <h6 className=\"mb-4\">Filters</h6>\r\n            </div>\r\n            <div className=\"\">\r\n              {filtersData.map((filter) => (\r\n                <div key={filter.title} className=\"filtercard\">\r\n                  <div className=\"headfilter\">\r\n                    <h4>{filter.title.replace(\"_\", \" \")}</h4>\r\n                  </div>\r\n                  {filter.options.map((option) => {\r\n                    const isChecked =\r\n                      selectedFilters[filter.title]?.includes(option.value) ||\r\n                      false;\r\n                    return (\r\n                      <div key={option.value} className=\"form-check mb-2\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check-input\"\r\n                          id={option.value}\r\n                          checked={isChecked}\r\n                          onChange={() =>\r\n                            toggleFilter(filter.title, option.value)\r\n                          } // Pass option.value\r\n                        />\r\n                        <label\r\n                          className=\"form-check-label\"\r\n                          htmlFor={option.value}\r\n                        >\r\n                          {option.label}\r\n                        </label>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Product Listing Section */}\r\n        <div className=\"col-md-9\">\r\n          <div className=\"row\">\r\n            {filteredProducts.length > 0 ? (\r\n              filteredProducts.map((product) => (\r\n                <div key={product.id} className=\"col-md-3\">\r\n                  <div className=\"catCard\">\r\n                    <Card key={product._id} product={product} />\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div>No product found</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductPageSection;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport HeaderOne from \"../components/HeaderOne\";\r\nimport FooterOne from \"../components/FooterOne\";\r\nimport BottomFooter from \"../components/BottomFooter\";\r\nimport ProductPageSection from \"../components/productPageSection\";\r\nconst ProductPage = () => {\r\n  return (\r\n    <>\r\n      {/* HeaderOne */}\r\n      <HeaderOne />\r\n\r\n      <div className=\"categoryPagemain\">\r\n      <ProductPageSection />\r\n      </div>\r\n\r\n      <FooterOne />\r\n\r\n      {/* BottomFooter */}\r\n      <BottomFooter />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n"],"names":["ProductPageSection","selectedFilters","setSelectedFilters","useState","products","setProducts","filtersData","setFiltersData","loading","setLoading","filtersLoading","setFiltersLoading","location","useLocation","categoryId","searchKey","state","useEffect","async","data","fetchFilters","success","error","console","getFiltersFromBackend","transformedFilters","Object","entries","filters","filter","_ref","_","value","length","reduce","acc","_ref2","key","values","fetchProducts","getProducts","CATEGORIES","filteredProducts","_jsx","className","children","_jsxs","map","title","replace","options","option","_selectedFilters$filt","isChecked","includes","type","id","checked","onChange","toggleFilter","filterType","optionValue","prev","currentValues","newValues","v","htmlFor","label","product","Card","_id","ProductPage","_Fragment","HeaderOne","FooterOne","BottomFooter"],"sourceRoot":""}